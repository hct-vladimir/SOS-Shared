@model Cerberus.Sos.Accounting.BusinessLogic.Entities.CuentaBanco

@{
    ViewBag.Title = "Registrar Cuenta Banco";
}

<h1>Nueva Cuenta Banco</h1>

<div class="row">
    <div class="col-md-6">
        <div class="panel panel-default">
            <div class="panel-heading">
                Ingresar datos de Cuenta Banco
            </div>
            <div class="panel-body collapse in">
                @using (Html.BeginForm())
    {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)

            <div class="form-group">

                @Html.LabelFor(model => model.BancoId, "Banco")
                <br />
                @Html.DropDownListFor(model => model.BancoId, new SelectList(ViewBag.BancoList, "Id", "Nombre"), "Seleccione", new { @class = "form-control" })
            </div>

            <div class="form-group">

                @Html.LabelFor(model => model.FacilityId, "Facility")
                <br />
                @Html.DropDownListFor(model => model.FacilityId, new SelectList(ViewBag.FacilityList, "Id", "Nombre"), "Seleccione", new { @class = "form-control" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FichaBanco, "FichaBanco")
                @Html.TextBoxFor(model => model.FichaBanco, null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.FichaBanco, "", new { @class = "text-danger" })
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.Contacto, "Contacto")
                @Html.TextBoxFor(model => model.Contacto, null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Contacto, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SaldoBs, "SaldoBs")
                @Html.TextBoxFor(model => model.SaldoBs, null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SaldoBs, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SaldoDl, "SaldoDl")
                @Html.TextBoxFor(model => model.SaldoDl, null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.SaldoDl, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NumeroCuenta, "NumeroCuenta")
                @Html.TextBoxFor(model => model.NumeroCuenta, null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.NumeroCuenta, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Alias, "Alias")
                @Html.TextBoxFor(model => model.Alias, null, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Alias, "", new { @class = "text-danger" })
            </div>


            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Registrar" class="btn btn-default" />
                </div>
            </div>
}
            </div>
        </div>
    </div>
</div>


<div class="form-links">
    @Html.ActionLink("Regresar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}



@*@using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>CuentasBanco</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.BancoId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.BancoId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.BancoId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FacilityId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FacilityId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FacilityId, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.FichaBanco, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FichaBanco, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FichaBanco, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Contacto, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Contacto, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Contacto, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SaldoBs, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SaldoBs, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SaldoBs, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.SaldoDl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SaldoDl, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SaldoDl, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.NumeroCuenta, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.NumeroCuenta, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.NumeroCuenta, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Alias, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Alias, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Alias, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

    <div>
        @Html.ActionLink("Back to List", "Index")
    </div>

    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }*@
