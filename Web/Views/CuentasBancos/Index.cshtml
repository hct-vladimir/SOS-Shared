@model IEnumerable<Cerberus.Sos.Accounting.BusinessLogic.Entities.CuentaBanco>

@{
    ViewBag.Title = "Index";
}

<h1>Cuentas Bancos</h1>
<div class="panel panel-default">
    <div class="panel-heading">
        <a href="#panel-busqueda" role="button" data-toggle="collapse">Búsqueda de Cuentas Bancos <span class="fa fa-chevron" aria-hidden="true"></span></a>
    </div>
    <div id="panel-busqueda" class="panel-body collapse in">
        @using (Html.BeginForm("Index", "CuentasBancos", FormMethod.Get))
        {
            @Html.ValidationSummary(true)

            <div class="row">
                <div class="col-md-4">
                    
                    <div class="form-group">
                        @Html.Label("Introduzca Numero Cuenta de Banco")
                        @Html.TextBox("txtNumeroCuentaBanco")
                    </div>
                </div>
            </div>
            <button type="submit" class="btn btn-default">Buscar</button>
            @*@Html.TextBox("txtNombreTerritorio")
                <input type="submit" value="Busqueda">*@
        }
    </div>
</div>


<p>
    @Html.ActionLink("Nueva Cuenta Banco", "Create")
</p>
@if (Model.Any())
{
    <div class="table-responsive">
        <table class="table table-striped table-bordered table-hover">
            <thead>
                <tr>
                    <th>Banco</th>
                    <th>Facility</th>
                    <th>FichaBanco</th>
                    <th>Contacto</th>
                    <th>SaldoBs</th>
                    <th>SaldoDl</th>
                    <th>NumeroCuenta</th>
                    <th>Alias</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                <tr>
                    <td>
                        @{ 
                            //item.BancoList = ViewBag.Bancos;
                            List<Cerberus.Sos.Accounting.BusinessLogic.Entities.Banco> listaBancos = ViewBag.Bancos;
                            string NombreBanco = listaBancos.Where(p => p.Id == item.BancoId).Select(x => x.Nombre).SingleOrDefault(); ;
                        }
                        @Html.DisplayFor(modelItem => NombreBanco)
                    </td>

                    <td>
                        @{ 
                            //item.FacilityList = ViewBag.Facilities;
                            List<Cerberus.Sos.Accounting.BusinessLogic.Entities.Facility> listaFacilities = ViewBag.Facilities;

                            string NombreFacility = listaFacilities.Where(p => p.Id == item.FacilityId).Select(x => x.Nombre).SingleOrDefault(); ;
                        }
                        @Html.DisplayFor(modelItem => NombreFacility)
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.FichaBanco)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Contacto)
                    </td>


                    <td>
                        @Html.DisplayFor(modelItem => item.SaldoBs)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SaldoDl)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.NumeroCuenta)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Alias)
                    </td>

                    <td>
                        @Html.ActionLink("Ver detalle", "Details", new { id = item.Id }) |
                        @Html.ActionLink("Modificar", "Edit", new { id = item.Id })

                    </td>
                </tr>
                }
            </tbody>

        </table>
    </div>
}



@*<p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.BancoId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FacilityId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.FichaBanco)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Contacto)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SaldoBs)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SaldoDl)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NumeroCuenta)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Alias)
            </th>
            <th></th>
        </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.BancoId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FacilityId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.FichaBanco)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Contacto)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SaldoBs)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SaldoDl)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumeroCuenta)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Alias)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
                @Html.ActionLink("Details", "Details", new { id=item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.Id })
            </td>
        </tr>
    }

    </table>*@
